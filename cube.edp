// Libraries
load "iovtk"
load "msh3"
load "medit"

// Parameters
real sizeX = 10;
real sizeY = 10;
real sizeZ = 10;
int meshX = 10;
int meshY = 10;
int meshZ = 10;

// Mesh
mesh3 Th = cube(meshX, meshY, meshZ, [sizeX*x, sizeY*y, sizeZ*z]);
plot(Th, wait=1, fill=1, cmm="Cube");
// medit("Mesh", Mesh);

// Functions space
fespace Vh(Th, [P1, P1, P1])
Vh [vx, vy, vz], [vxTeste, vyTeste, vzTeste];

// Boundary Conditions 
solve velocity([vx, vy, vz], [vxTeste, vyTeste, vzTeste]) = 
    int2d(Th)(dx(vx)*dx(vxTeste) + dy(vx)*dy(vxTeste) + dz(vx)*dz(vxTeste) +  
              dx(vy)*dx(vyTeste) + dy(vy)*dy(vyTeste)) + dz(vy)*dz(vyTeste) +
              dx(vz)*dx(vzTeste) + dy(vz)*dy(vzTeste)) + dz(vz)*dz(vzTeste)
    on(c, vx=1, vy=0) + 
    on(a, b, d, vx=0, vy=0);

plot([vx, vy], wait=1, fill=0, cmm="Step");