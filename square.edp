// Building Square
border a(t=0 ,1){x=t; y=0;}
border b(t=0 ,1){x=1; y=t;}
border c(t=0 ,1){x=1-t; y=1;}
border d(t=0 ,1){x=0; y=1-t;}

mesh Th = buildmesh(a(2) + b(2) + c(2) + d(2)); 

// Plot Square
plot(Th, wait=0, fill=1, cmm="Square");

// Functions space
fespace Vh(Th, [P1, P1]);
Vh [vx, vy], [vxTeste, vyTeste];

// Boundary conditions
solve velocity([vx, vy], [vxTeste, vyTeste]) = 
    int2d(Th)(dx(vx)*dx(vxTeste) + dy(vx)*dy(vxTeste) + 
              dx(vy)*dx(vyTeste) + dy(vy)*dy(vyTeste)) + 
    on(c, vx=1, vy=0) + 
    on(a, b, d, vx=0, vy=0);

plot([vx, vy], wait=1, fill=1, cmm="Step");

// // Alternative
// plot(vx, wait=1, fill=1, cmm="Velocity in x");
// plot(vy, wait=1, fill=1, cmm="Velocity in y");
